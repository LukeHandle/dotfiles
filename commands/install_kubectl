#!/bin/sh

# import helpers
source `dirname $0`/helpers

KUBECTL_VERSION=$(curl -L -s https://dl.k8s.io/release/stable.txt)

# Choose kubectl install method
function install_kubectl {
  if is_linux; then

      if type "/usr/local/bin/kubectl" &> /dev/null; then
        einf "kubectl already installed..! ($(/usr/local/bin/kubectl version --short --client))"
        askdo install_linux_kubectl "Force install kubectl ${KUBECTL_VERSION}?"
        return
      fi

    install_linux_kubectl
  else
    einf "kubectl install is only Linux"
  fi
}

function install_linux_kubectl {
  sudo -v
  einf "Download kubectl ${KUBECTL_VERSION}..."
  KUBECTL_DL_URL="https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
  KUBECTL_DL_PATH="/tmp/kubectl-${KUBECTL_VERSION}"

  echo
  curl -L -o ${KUBECTL_DL_PATH} ${KUBECTL_DL_URL}
  if [ $? -ne 0 ]; then
    eerr "Download of ${KUBECTL_DL_URL} failed... $?"
    eerr "Command: curl -L -o ${KUBECTL_DL_PATH} ${KUBECTL_DL_URL}"
    return
  fi

  einf "Verifying SHA256..."
  KUBECTL_SHA256_URL="https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256"
  KUBECTL_SHA256="$(curl -L ${KUBECTL_SHA256_URL})"
  echo "${KUBECTL_SHA256} ${KUBECTL_DL_PATH}" | sha256sum --check
  if [ $? -ne 0 ]; then
    eerr "SHA256 validation failed... $?"
    return
  fi

  sudo -v
  if [ -f /usr/local/bin/kubectl ]; then
    einf "kubectl already installed, removing first..."
    sudo rm -f /usr/local/bin/kubectl
  fi

  einf "Install kubectl to /usr/local/bin/kubectl..."
  sudo install -o root -g root -m 0755 ${KUBECTL_DL_PATH} /usr/local/bin/kubectl


  rm -f ${KUBECTL_DL_PATH}
  einf "kubectl install complete"
  /usr/local/bin/kubectl version --short --client
}



askdo install_kubectl "Install kubectl?"
